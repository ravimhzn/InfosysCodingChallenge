// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        // SDK and tools
        compileSdkVersion = 29
        minSdkVersion = 23
        targetSdkVersion = 29
        versionCode = 400
        versionName = "3.0.0"

        // App dependencies
        kotlin_version = '1.3.71'
        androidGradlePluginVersion = '3.6.1'
        appcompatVersion = '1.1.0'
        materialVersion = '1.1.0'
        swipeRefreshVersion = '1.0.0'
        constraintLayoutVersion = '1.1.3'
        coreVersion = '1.2.0'
        dagger_version = '2.27'
        glideVersion = '4.11.0'
        moshiVersion = '1.8.0'
        junitVersion = '4.12'
        mockitoVersion = '3.2.0'
        mockitoKotlinVersion = '2.2.0'
        navigationVersion = '2.2.1'
        retrofitVersion = '2.6.2'
        loggingInterceptorVersion = '4.2.1'
        threetenabpVersion = '1.2.2'
        threetenbpVersion = '1.4.0'
        timberVersion = '4.7.1'
        lifecycleVersion = '2.2.0'
        preference = '1.1.0'
        testExtVersion = '1.1.1'
        runnerVersion = '1.2.0'
        fabricVersion = '1.31.2'
        analyticsVersion = '17.2.3'
        crashlyticsVersion = '2.10.1'
        firebaseConfigVersion = '19.1.3'
        googleServicesVersion = '4.3.3'
        arcCoreTesingVersion = '2.1.0'
        espressoVersion = '3.2.0'
        junitExtVersion = '1.1.1'
        lottieVersion = '3.4.0'
        room_version = '2.2.3'
    }
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        def nav_version = "2.3.0-alpha04"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
